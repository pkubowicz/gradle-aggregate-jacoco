buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.palantir:gradle-flexversion:0.7.0'
	}
}

plugins {
	id 'com.jfrog.bintray' version '1.6'
	id 'com.gradle.plugin-publish' version '0.10.1'
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
	jcenter()
}

apply plugin: 'gradle-flexversion'
flexversion.useTags = true
group 'org.wrlyonsjr'
version flexVersion()

dependencies {
	compile gradleApi()
	compile localGroovy()
	compile 'com.google.guava:guava:18.0'

	testCompile 'org.hamcrest:hamcrest-all:1.3'
	testCompile 'com.netflix.nebula:nebula-test:7.6.0'
}

task sourceJar(type: Jar) {
	from sourceSets.main.allSource
	classifier 'sources'
}

publishing {
	publications {
		PluginPublication(MavenPublication) {
			from components.java

			artifact(sourceJar) {
				classifier 'sources'
			}
		}
	}
}

pluginBundle {
	website = 'https://github.com/wrlyonsjr/gradle-aggregate-jacoco'
	vcsUrl = 'https://github.com/wrlyonsjr/gradle-aggregate-jacoco'
	description = 'The org.wrlyonsjr.jacoco-coverage and org.wrlyonsjr.jacoco-full-report plugins provide tasks and configuration to aggregate jacoco coverage reports and thresholding at the root project level.'
	tags = ['java', 'code quality', 'jacoco', 'code coverage', 'coverage']

	plugins {
		jacocoCoveragePlugin {
			id = 'org.wrlyonsjr.jacoco-coverage'
			displayName = 'Jacoco Coverage Plugin'
		}
		jacocoFullReportPlugin {
			id = 'org.wrlyonsjr.jacoco-full-report'
			displayName = 'Jacoco Full Report Plugin'
		}
	}
}

publishPlugins.onlyIf {
	project.version.isTag == true
}
